#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

mktmpdir() {
  dir=$(mktemp -t node-$1-XXXX)
  rm -rf $dir
  mkdir -p $dir
  echo $dir
}
function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

S3_BUCKET="cl-heroku"
CCL_PACKAGE="http://${S3_BUCKET}.s3.amazonaws.com/ccl-1.7.tgz"

# parse and derive params
BUILD_DIR=$1
CACHE_DIR=$2
CACHE_QUICKLISP_DIR="$CACHE_DIR/quicklisp/" 
BUILD_QUICKLISP_DIR="$BUILD_DIR/quicklisp/"

CCL_DIR="$CACHE_DIR/ccl"

# don't we only want to do this if not there?
echo "-----> Fetching ccl"
mkdir -p $CCL_DIR  && curl $CCL_PACKAGE -s -o -  | tar xzf - -C $CCL_DIR

# add to slug 
cp -r $CCL_DIR $BUILD_DIR/ccl 

echo "ccl installed" | indent

# setting up paths for building

# unpack existing cache
# nodejs is more elaborate; this ought work
if [ -d $CACHE_QUICKLISP_DIR ]; then

    cp -r $CACHE_QUICKLISP_DIR $BUILD_QUICKLISP_DIR

fi

echo "-----> "Getting patched versions of libraries"
# get patched aserve
if [ -d $CACHE_DIR/repos/portableaserve ]; then
    pushd $CACHE_DIR/repos/portableaserve
    git pull
    popd
else 
    pushd $CACHE_DIR/repos
    git clone git://github.com/mtravers/portableaserve.git
    popd
fi

echo "-----> Installing dependencies with quicklisp"

# run lisp to load quicklisp packages
export CCL_DEFAULT_DIRECTORY=$BUILD_DIR/ccl  
# should run from build -- but is source tree there?
$CCL_DEFAULT_DIRECTORY/scripts/ccl -l setup/compile.lisp

echo "dependencies installed" | indent
  
# copy quicklisp back to cache
if [ -d $CACHE_QUICKLISP_DIR ]; then

    rm -rf $CACHE_QUICKLISP_DIR
    cp -r $BUILD_QUICKLISP_DIR $CACHE_QUICKLISP_DIR

fi
